// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Archive {
  id                  String       @id @default(uuid())
  kodeUnit            String?
  indeks              String?
  nomorBerkas         String?
  judulBerkas         String?
  nomorIsiBerkas      String?
  jenisNaskahDinas    String?
  klasifikasi         String?
  nomorSurat          String?
  tanggal             DateTime?
  perihal             String?
  tahun               Int?
  tingkatPerkembangan String?
  kondisi             String?
  lokasiSimpan        String?
  retensiAktif        String?
  keterangan          String?
  entryDate           DateTime
  retentionYears      Int
  status              Status       @default(ACTIVE)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  
  // Relasi dengan Peminjaman
  peminjaman          Peminjaman[]
}

model Peminjaman {
  id                  String    @id @default(uuid())
  nomorSurat          String    @unique
  peminjam            String
  keperluan           String
  tanggalPinjam       DateTime
  tanggalHarusKembali DateTime
  tanggalPengembalian DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  
  // Foreign key untuk relasi dengan Archive
  archiveId           String
  archive             Archive   @relation(fields: [archiveId], references: [id], onDelete: Cascade)
  
  @@map("peminjaman")
}

enum Status {
  ACTIVE
  INACTIVE
  DISPOSE_ELIGIBLE
}